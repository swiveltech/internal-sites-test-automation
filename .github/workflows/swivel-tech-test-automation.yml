name: Automation Tests - Swivel Tech

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  run-tests:
    runs-on: windows-latest

    steps:
      - name: Set Screen Resolution
        run: |
          Add-Type -TypeDefinition @"
          using System;
          using System.Runtime.InteropServices;
          public class ScreenResolution {
              [DllImport("user32.dll")]
              public static extern int ChangeDisplaySettings(ref DEVMODE devMode, int flags);
    
              [StructLayout(LayoutKind.Sequential)]
              public struct DEVMODE {
                  [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
                  public string dmDeviceName;
                  public short dmSpecVersion;
                  public short dmDriverVersion;
                  public short dmSize;
                  public short dmDriverExtra;
                  public int dmFields;
                  public int dmPositionX;
                  public int dmPositionY;
                  public int dmDisplayOrientation;
                  public int dmColor;
                  public int dmDuplex;
                  public int dmYResolution;
                  public int dmTTOption;
                  public int dmCollate;
                  [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)]
                  public string dmFormName;
                  public short dmLogPixels;
                  public int dmBitsPerPel;
                  public int dmPelsWidth;
                  public int dmPelsHeight;
                  public int dmDisplayFlags;
                  public int dmDisplayFrequency;
                  public int dmICMMethod;
                  public int dmICMIntent;
                  public int dmMediaType;
                  public int dmDitherType;
                  public int dmReserved1;
                  public int dmReserved2;
                  public int dmPanningWidth;
                  public int dmPanningHeight;
              }
          }
          "@ -Language CSharp
    
          $devmode = New-Object ScreenResolution+DEVMODE
          $devmode.dmSize = [System.Runtime.InteropServices.Marshal]::SizeOf($devmode)
          $devmode.dmPelsWidth = 1920
          $devmode.dmPelsHeight = 1080
          $devmode.dmBitsPerPel = 32
          $devmode.dmFields = 0x40000 -bor 0x80000 -bor 0x200000
          [ScreenResolution]::ChangeDisplaySettings([ref]$devmode, 0)
        shell: pwsh
  
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: |
          npm install --legacy-peer-deps

      # - name: Fix Npm issues
      #   run: |
      #     npm audit fix --force

      - name: Install Allure
        run: npm install -g allure-commandline

      # - name: Install Chrome
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y google-chrome-stable

      # - name: Verify Chrome Installation
      #   run: google-chrome --version

      - name: Run WebdriverIO Tests
        run: npm run swiveltech

      #- name: Find and Save Report Path
      #  run: |
      #    allure generate --clean --single-file allure-results
      # run: |
      #   allure generate ./reports/allure-results --clean -o ./reports
      #   ls reports/

      - name: Generate Timestamp
        shell: pwsh
        run: |
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          echo "TIMESTAMP=$timestamp" >> $env:GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
          aws-region: ap-southeast-2

      - name: Upload Report to S3
        shell: pwsh
        run: |
          Rename-Item -Path allure-report/index.html -NewName "index-$env:TIMESTAMP.html"
          aws s3 cp allure-report/index-$env:TIMESTAMP.html s3://internal-test-automation/swivel-tech/

      - name: Send Report via AWS SES
        shell: pwsh
        run: |
          $REPORT_URL="https://internal-test-automation.s3.ap-southeast-2.amazonaws.com/swivel-tech/index-$env:TIMESTAMP.html"

          $htmlContent = "<html><body><h2>Automation Test Report - SwivelTech</h2><p>Click <a href=""$REPORT_URL"">here</a> to view the report.</p></body></html>"

          $messageObj = @{
            Subject = @{ Data = "Automation Test Report - SwivelTech" }
            Body = @{
              Text = @{ Data = "Here is your test report: $REPORT_URL" }
              Html = @{ Data = $htmlContent }
            }
          }

          $messageJson = ConvertTo-Json -Depth 4 -Compress $messageObj

          aws ses send-email --from "serviceaccount@swivelgroup.com.au" --destination "ToAddresses=dilshan@swivelgroup.com.au" --message $messageJson --region "ap-southeast-2"
